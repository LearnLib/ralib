target=de.learnlib.ralib.sul.tcp.TCPAdapterSut
inputs=IConnect()+\
  ISA(java.lang.Long:long,java.lang.Long:long)+\
  IR(java.lang.Long:long,java.lang.Long:long)+\
  IRA(java.lang.Long:long,java.lang.Long:long)+\
  CLOSE()
  
outputs=OTIMEOUT()+\
  OA(java.lang.Long:long,java.lang.Long:long)+\
  OFA(java.lang.Long:long,java.lang.Long:long)+\
  OS(java.lang.Long:long,java.lang.Long:long)+\
  OSA(java.lang.Long:long,java.lang.Long:long)+\
  OR(java.lang.Long:long,java.lang.Long:long)+\
  OAR(java.lang.Long:long,java.lang.Long:long)

solver=z3
logging.level=WARNING
max.time.millis=100000000
use.ceopt=true
use.suffixopt=true
use.fresh=true
use.rwalk=true
target.port=18001
#cache.load=dump.ser
cache.load=tcp-linux-cache.ser
cache.dump=tcp-linux-cache.ser
cache.tests=true
export.model=false
eqoracle=rwalkfromstate
random.seed=1
#debug.traces=IConnect[] OS[2920000[long], 0[long]] ISA[5840000[long], 2920000[long] + 1[long]] OA[2920000[long] + 1[long], 5840000[long] + 1[long]] IRA[5840000[long], 0[long]] OTIMEOUT[] IRA[0[long], 8760000[long]] OTIMEOUT[] CLOSE[]
#debug.suffixes=OA[s1, s2] IFA[s3, s4] OA[s5, s6]
#debug.traces=IConnect[] OS[2920000[long], 0[long]] ISA[5840000[long], 2920000[long] + 1[long]] OA[2920000[long] + 1[long], 5840000[long] + 1[long]] CLOSE[] OFA[2920000[long] + 1[long], 5840000[long] + 1[long]]  IFA[5840000[long] + 1[long], 8760000[long]] OA[2920000[long] + 1[long] + 1[long], 5840000[long] + 1[long] + 1[long]] IFA[11680000[long], 14600000[long]]
#debug.traces=IConnect[] OS[2920000[long], 0[long]] ISA[5840000[long], 2920000[long] + 1[long]] OA[2920000[long] + 1[long], 5840000[long] + 1[long]] CLOSE[] OFA[2920000[long] + 1[long], 5840000[long] + 1[long]] ISA[8760000[long], 11680000[long]] OA[2920000[long] + 1[long] + 1[long], 5840000[long] + 1[long]] IRA[5840000[long] + 1[long], 14600000[long]] OTIMEOUT[] ISA[17520000[long], 20440000[long]]
#debug.traces=IConnect[] OS[2920000[long], 0[long]] ISA[5840000[long], 2920000[long] + 1[long]] OA[2920000[long] + 1[long], 5840000[long] + 1[long]] CLOSE[] OFA[2920000[long] + 1[long], 5840000[long] + 1[long]] IConnect[] OTIMEOUT[]
#debug.suffixes=IR[s1, s2] OA[s3, s4]
rwalkfromstate.prob.history=0.3
rwalkfromstate.prob.register=0.4
rwalkfromstate.prob.related=0.2
rwalkfromstate.prob.reset=0.1
rwalkfromstate.max.depth=10
rwalkfromstate.max.runs=10000
rwalkfromstate.reset.count=false
rwalkfromstate.draw.uniform=true
teachers=long:de.learnlib.ralib.tools.theories.SumCLongInequalityTheory
constants=[{"type":"long","value":"0"}]
constants.sumc=[{"type":"long","value":"1"}, {"type":"long","value":"29200"}]
