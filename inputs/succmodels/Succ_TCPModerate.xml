<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

int clientNr;
int serverNr;
int p;
int q;

void ISYN(int p, int q) {
}

void IACK(int p, int q) {
}

void IACKPSH(int p, int q) {
}

void IFINACK(int p, int q) {
}

void OTIMEOUT(int p, int q) {
}

void OSYNACK(int p, int q) {
}

void OACK(int p, int q) {
}</declaration><template><name x="5" y="5">Template</name><declaration>// Place local declarations here.
</declaration><location id="id0" x="256" y="-40"></location><location id="id1" x="528" y="56"></location><location id="id2" x="408" y="384"></location><location id="id3" x="144" y="264"></location><location id="id4" x="368" y="112"></location><location id="id5" x="-184" y="352"></location><location id="id6" x="136" y="344"></location><location id="id7" x="-32" y="344"></location><location id="id8" x="104" y="-88"></location><location id="id9" x="-32" y="216"></location><location id="id10" x="216" y="88"></location><location id="id11" x="-32" y="96"></location><location id="id12" x="-32" y="16"></location><location id="id13" x="-32" y="-80"></location><init ref="id13"/><transition><source ref="id0"/><target ref="id13"/><label kind="synchronisation" x="144" y="-80">OTIMEOUT()</label></transition><transition><source ref="id4"/><target ref="id0"/><label kind="guard" x="248" y="40">p==clientNr</label><label kind="synchronisation" x="252" y="21">ISYN(p,q)</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="guard" x="240" y="416">p!=clientNr || q!=serverNr</label><label kind="synchronisation" x="216" y="392">IFINACK(p,q)</label><nail x="128" y="504"/><nail x="304" y="496"/></transition><transition><source ref="id1"/><target ref="id4"/><label kind="synchronisation" x="416" y="40">OTIMEOUT()</label><nail x="440" y="40"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="464" y="-16">p!=clientNr</label><label kind="synchronisation" x="416" y="-40">ISYN(p,q)</label><nail x="432" y="0"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="488" y="144">IFINACK(p,q)</label><nail x="536" y="144"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="416" y="88">IACKPSH(p,q)</label><nail x="520" y="112"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="388" y="69">IACK(p,q)</label></transition><transition><source ref="id11"/><target ref="id10"/><label kind="guard" x="144" y="144">p!=clientNr+1 || q!=serverNr+1</label><label kind="synchronisation" x="200" y="104">IFINACK(p,q)</label><nail x="152" y="168"/></transition><transition><source ref="id2"/><target ref="id4"/><label kind="synchronisation" x="496" y="240">OACK(p,q)</label><nail x="520" y="192"/></transition><transition><source ref="id7"/><target ref="id2"/><label kind="guard" x="136" y="512">p==clientNr &amp;&amp; q==serverNr</label><label kind="synchronisation" x="160" y="536">IFINACK(p,q)</label><nail x="96" y="563"/><nail x="384" y="499"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="280" y="176">OACK(p,q)</label><label kind="assignment" x="248" y="200">p=serverNr;q=clientNr;</label></transition><transition><source ref="id11"/><target ref="id3"/><label kind="guard" x="0" y="184">p==clientNr+1 &amp;&amp; q==serverNr+1</label><label kind="synchronisation" x="-4" y="165">IFINACK(p,q)</label><label kind="assignment" x="-16" y="200">clientNr=clientNr+2;serverNr=serverNr+1</label></transition><transition><source ref="id13"/><target ref="id8"/><label kind="synchronisation" x="88" y="-32">IFINACK(p,q)</label><nail x="80" y="-8"/></transition><transition><source ref="id7"/><target ref="id6"/><label kind="guard" x="104" y="456">p!=clientNr || q!=serverNr</label><label kind="synchronisation" x="136" y="416">IACKPSH(p,q)</label><nail x="112" y="472"/></transition><transition><source ref="id5"/><target ref="id7"/><label kind="synchronisation" x="-168" y="256">OACK(p,q)</label><label kind="assignment" x="-208" y="272">p=serverNr; q=clientNr;</label><nail x="-112" y="296"/></transition><transition><source ref="id7"/><target ref="id5"/><label kind="guard" x="-288" y="416">p==clientNr &amp;&amp; q==serverNr</label><label kind="synchronisation" x="-200" y="440">IACKPSH(p,q)</label><label kind="assignment" x="-232" y="472">clientNr = clientNr+1;</label><nail x="-144" y="408"/></transition><transition><source ref="id11"/><target ref="id10"/><label kind="synchronisation" x="120" y="16">IACKPSH(p,q)</label><nail x="40" y="-16"/></transition><transition><source ref="id13"/><target ref="id8"/><label kind="synchronisation" x="-8" y="-104">IACKPSH(p,q)</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="32" y="320">IACK(p,q)</label></transition><transition><source ref="id6"/><target ref="id7"/><label kind="synchronisation" x="40" y="400">OTIMEOUT()</label><nail x="56" y="400"/></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="88" y="288">ISYN(p,q)</label><nail x="72" y="297"/></transition><transition><source ref="id9"/><target ref="id7"/><label kind="synchronisation" x="-16" y="256">OTIMEOUT()</label></transition><transition><source ref="id11"/><target ref="id10"/><label kind="synchronisation" x="40" y="0">ISYN(p,q)</label><nail x="40" y="24"/></transition><transition><source ref="id8"/><target ref="id13"/><label kind="synchronisation" x="16" y="-144">OTIMEOUT()</label><nail x="48" y="-120"/></transition><transition><source ref="id13"/><target ref="id8"/><label kind="synchronisation" x="24" y="-48">IACK(p,q)</label><nail x="48" y="-48"/></transition><transition><source ref="id10"/><target ref="id11"/><label kind="synchronisation" x="56" y="120">OTIMEOUT()</label><nail x="56" y="112"/></transition><transition><source ref="id11"/><target ref="id10"/><label kind="guard" x="0" y="56">p!=clientNr+1 || q!=serverNr+1</label><label kind="synchronisation" x="40" y="40">IACK(p,q)</label></transition><transition><source ref="id11"/><target ref="id9"/><label kind="guard" x="-264" y="136">p==clientNr+1 &amp;&amp; q==serverNr+1</label><label kind="synchronisation" x="-152" y="112">IACK(p,q)</label><label kind="assignment" x="-288" y="168">clientNr=clientNr+1; serverNr=serverNr+1;</label></transition><transition><source ref="id12"/><target ref="id11"/><label kind="synchronisation" x="-152" y="32">OSYNACK(p,q)</label><label kind="assignment" x="-280" y="56">p=random(); q=clientNr+1; serverNr=p;</label></transition><transition><source ref="id13"/><target ref="id12"/><label kind="synchronisation" x="-104" y="-71">ISYN(p,q)</label><label kind="assignment" x="-104" y="-56">clientNr=p;</label></transition></template><system>// Place template instantiations here.
Process = Template();

// List one or more processes to be composed into a system.
system Process;</system></nta>